# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2


      # Runs a single command using the runners shell
      - name: docker-compose up
        run: docker-compose -f dev/docker-compose-ci-yml up -d

      - name: wait until docker compose is up
        run: dev/check_docker_ready.sh

      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v2

      - name: Install red_counter
        run: |
            docker cp ../red_counter/ $(docker-compose -f dev/docker-compose-ci-yml ps -q redmine):/opt/bitnami/redmine/plugins
            docker exec $(docker-compose -f dev/docker-compose-ci-yml ps -q mariadb) mysql -u root -e "show grants for redmine; GRANT ALL PRIVILEGES ON *.* TO 'redmine'@'%'; show grants for redmine;"
            docker cp dev/setup_env.sh $(docker-compose -f dev/docker-compose-ci-yml ps -q redmine):/
            docker exec $(docker-compose -f dev/docker-compose-ci-yml ps -q redmine) bash -e /setup_env.sh

      - name: Run tests
        run: |
            docker cp dev/run_tests.sh $(docker-compose -f dev/docker-compose-ci-yml ps -q redmine):/
            docker exec $(docker-compose -f dev/docker-compose-ci-yml ps -q redmine) bash -e /run_tests.sh
